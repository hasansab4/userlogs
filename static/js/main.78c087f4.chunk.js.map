{"version":3,"sources":["components/styledcomponents/styledcomponents.js","components/users/users.js","components/backdrop/backdrop.js","components/modal/modal.js","components/spinner/spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Block","styled","div","makeBig","keyframes","ModalDiv","CancelBtn","button","UserBlock","rotate","Spinner","fastMove","User","users","props","user","split","charAt","onClick","clicked","backdrop","show","style","height","width","backgroundColor","position","top","left","zIndex","transition","modal","getDate","date","time","month","Date","getMonth","mon","toString","length","day","hour","hr","min","slice","startTime","endTime","changeDate","display","alignItems","gap","marginBottom","textAlign","padding","fontSize","fontWeight","indexVal","type","value","onChange","spinner","App","useState","backDrop","setBackDrop","setModal","activePeriod","setActivePeriod","members","setMembers","useEffect","axios","method","url","then","response","Object","values","data","setTimeout","catch","error","console","log","activityPeriods","getUniqueId","Math","floor","random","closePopUp","map","usr","idx","real_name","index","newState","activity_periods","getUserData","start_time","end_time","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c087f4.chunk.js","sourcesContent":["\nimport styled, { keyframes } from 'styled-components';\nexport const Block = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`\n\n\nexport const makeBig = keyframes`\n 0% {\n      opacity: 0;\n      transform: scale(0);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n`\n\nexport const ModalDiv = styled.div`\n  background-color: #ffffff;\n  position: absolute;\n  top: 20%;\n  left: 35%;\n  width: 500px;\n  padding: 2rem;\n  z-index: 2;\n  animation: ${makeBig} 0.2s linear;\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n`;\n\nexport const CancelBtn = styled.button`\n  border: 0;\n  outline: 0;\n  background-color: transparent;\n  border-radius: 50%;\n  box-shadow: 0 2px 5px rgb(0 0 0 / 50%);\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  float: right;\n  cursor: pointer;\n  transform: rotate(45deg);\n\n  &:hover{\n    background-color: rgb(240, 240, 240);\n  }\n`\nexport const UserBlock = styled.div`\n  margin: 3rem;\n  text-align: center;\n  display: inline-flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`\nexport const rotate = keyframes`\n0%{\n        transform: rotate(0);\n    }\n    100%{\n        transform: rotate(360deg);\n    }\n`\nexport const Spinner = styled.div`\n    width: 40px;\n    height: 40px;\n    display: inline-block;\n    border: 4px solid #000;\n    border-radius: 50%;\n    border-bottom-color: transparent;\n    border-right-color: transparent;\n    animation: ${rotate} 1s linear infinite;\n`\n\nexport const fastMove= keyframes`\n    0%{\n        transform: skewX(-20deg);\n    }\n    100%{\n        transform: skewX(-20deg) translateX(600%);\n    }\n`\n\nexport const User = styled.div`\n  background-color: rgba(24, 227, 88, 1);\n  display: inline-flex;\n  padding: 0.5rem;\n  align-items: center;\n  gap: 1rem;\n  color: #ffffff;\n  position: relative;\n  cursor: pointer;\n  overflow: hidden;\n  box-shadow: 0 2px 5px rgba(24, 227, 88, 0.1);\n  transition: 0.5s ease background-color;\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(24, 227, 88, 0.5);\n    background-color: rgb(18 191 79);\n  }\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: inline-block;\n    opacity: 0.5;\n    width: 40px;\n    transform: skewX(-20deg) translate(-150%);\n    background-color: #fff;\n    height: 100%;\n    transition: 0.1s linear transform;\n  }\n\n  &:hover::before {\n    animation: ${fastMove} 0.1s linear;\n  }\n\n  & p:first-child {\n    border: 1px solid #fff;\n    width: 40px;\n    height: 40px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    box-shadow: 0 2px 5px rgb(0 0 0 / 20%);\n    color: #fff;\n    transition: 0.1s ease box-shadow;\n  }\n\n  &:hover p:first-child {\n    box-shadow: 0 2px 5px rgb(0 0 0 / 50%);\n  }\n`;","import React from 'react';\nimport {User} from '../styledcomponents/styledcomponents';\nconst users = (props) =>{\n    let firstChar = props.user.split(' ')[0].charAt(0) || \"\";\n    let secondChar = (props.user.split(' ')[1])? props.user.split(' ')[1].charAt(0): \"\";\n    let user = firstChar + secondChar;\n    \n    return (\n      <User onClick={props.clicked}>\n        <p>{user}</p>\n        <p>{props.user}</p>\n      </User>\n    );\n}\nexport default users;","import React from 'react';\n\nconst backdrop = (props) => {\n    let backdrop = {\n      height: \"100vh\",\n      width: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      zIndex: \"1\",\n      transition:\"all .1s\"\n    };\n\n    return (\n        <>\n        {props.show ? (<div style={backdrop} onClick={props.clicked}></div>):null}\n        </>\n    );\n}\n\nexport default backdrop;\n\n","import React from 'react';\n\nconst modal = (props) => {\n\n\n    let getDate = (date)=>{\n        //let date = \"Feb 1 2020  1:33PM\";\n        let time = date.split(' ')[3]===\"\"?date.split(' ')[4]:date.split(' ')[3];\n        let month = new Date(`${date.split(\" \")[0]}-${date.split(\" \")[1]}-${date.split(\" \")[2]}`).getMonth()+1;\n        let mon = month.toString().length === 1?`0${month}`:month.toString();   \n        let day = date.split(\" \")[1].length === 1?`0${date.split(\" \")[1]}`:date.split(\" \")[1];       \n        let hour = time.split(':')[0];\n        let hr = hour.length === 1?`0${hour}`:hour;\n        let minutes = time.split(':')[1]    \n        let min = minutes.slice(0,2);\n        let newDate = `${date.split(\" \")[2]}-${mon}-${day}T${hr}:${min}`;\n        return newDate;\n    }    \n\n  let startTime = getDate(props.startTime);\n  let endTime = getDate(props.endTime);\n\n    let changeDate = () => {\n        //Date Can be change here since the requirement is only Read\n    }\n\n  let date = {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"1rem\",\n    marginBottom: \".5rem\",\n  };\n\n  let title={\n    textAlign: 'center',\n    padding: '1rem 0',\n    fontSize: '20px',\n    fontWeight: 'bold',\n  }\n\n  return (\n    <>\n      <p style={title}>Log Timing {props.indexVal}</p>  \n      <div style={date}>\n        <label>Start Time</label>\n        <input type=\"datetime-local\" value={startTime} onChange={changeDate}/>\n      </div>\n      <div style={date}>\n        <label>End Time</label>\n        <input type=\"datetime-local\" value={endTime} onChange={changeDate}/>\n      </div>\n    </>\n  );\n}\n\nexport default modal;","import React from 'react';\nimport { Spinner } from '../styledcomponents/styledcomponents';\n\nconst spinner = () => (\n    <>\n    <Spinner></Spinner>        \n    </>\n)\n\nexport default spinner;","\nimport React ,{useState ,useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Users from './components/users/users';\nimport Backdrop from './components/backdrop/backdrop';\nimport Modal from './components/modal/modal';\nimport Spinner from './components/spinner/spinner';\nimport {Block,ModalDiv,CancelBtn,UserBlock} from './components/styledcomponents/styledcomponents';\nconst App = () => {\n  const [backDrop,setBackDrop] = useState(false);\n  const [modal,setModal] = useState(false);\n  const [activePeriod,setActivePeriod] = useState(null);\n  const [members, setMembers] = useState([]);\n\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'https://useractiveperiod-default-rtdb.firebaseio.com/members.json'\n    })\n    .then((response)=>{\n      // console.log(response)\n      let members = Object.values(response.data)\n      setTimeout(()=>{setMembers(members);},1000)\n      // console.log(members);\n    })\n    .catch((error)=>{\n      console.log(error)\n    })    \n  },[])\n  const getUniqueId = () => Math.floor(Math.random()* 999999);\n  \n  const getUserData = (index) => {\n     let newState = {...members};\n     setActivePeriod(newState[index].activity_periods)\n     setBackDrop(true)\n     setModal(true)\n  }\n  const closePopUp = () =>{\n    setBackDrop(false)\n     setModal(false)\n  }\n  \n  let users = members.map((usr, idx) => (\n    <Users\n      key={getUniqueId()}\n      user={usr.real_name}\n      clicked={() => getUserData(idx)}\n    />\n  ));\n  if(members.length === 0){\n    users = (<Spinner />);\n  }\n  let activityPeriods;\n  if (activePeriod !== null) {\n    activityPeriods = activePeriod.map((time,idx) => (\n      <Modal\n        key={getUniqueId()}\n        indexVal={idx+1}\n        startTime={time.start_time}\n        endTime={time.end_time}\n      />\n    ));\n  }\n  return (\n    <>\n      <Backdrop show={backDrop} clicked={closePopUp} />\n      <Block>\n        <UserBlock>{users}</UserBlock>\n        {modal ? (\n          <ModalDiv>\n            <CancelBtn onClick={closePopUp}>+</CancelBtn>\n            {activityPeriods}\n          </ModalDiv>\n        ) : null}\n      </Block>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}